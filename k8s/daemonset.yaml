apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fencing-agent
  namespace: default
spec:
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/fencing-agent: unconfined
    spec:
      serviceAccountName: fencing-agent
#      tolerations:
#        # these tolerations are to have the daemonset runnable on control plane nodes
#        # remove them if your control plane nodes should not run pods
#        - key: node-role.kubernetes.io/control-plane
#          operator: Exists
#          effect: NoSchedule
#        - key: node-role.kubernetes.io/master
#          operator: Exists
#          effect: NoSchedule
      containers:
        - name: fencing-agent
          securityContext:
            privileged: true
            #runAsUser: 0
#            allowPrivilegeEscalation: true
#            capabilities:
#              add: [ "ALL" ]
          #command: ["tail", "-f", "/dev/null"]
          imagePullPolicy: Always
          env:
            - name: LOG_LEVEL
              value: debug
            - name: WATCHDOG_DEVICE
              value: /dev/watchdog
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: docker.io/fl64/fencing-agent:v0.0.0-dev0
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: watchdog
              mountPath: /dev/watchdog
      terminationGracePeriodSeconds: 10
      volumes:
        - name: watchdog
          hostPath:
            path: /dev/watchdog
            type: CharDevice

